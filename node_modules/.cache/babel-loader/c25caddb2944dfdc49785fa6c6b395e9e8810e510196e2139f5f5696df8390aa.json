{"ast":null,"code":"var _jsxFileName = \"/Users/rafaelabootcamp/dev/react-portfolio/my-portfolio/src/components/MailchimpForm.js\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { Newsletter } from \"./Newsletter\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MailchimpForm = () => {\n  const postUrl = `${process.env.REACT_APP_MAILCHIMP_URL}?u=${process.env.REACT_APP_MAILCHIMP_U}$id=${process.env.REACT_APP_MAILCHIMP_ID}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MailchimpSubscribe, {\n      url: postUrl,\n      render: _ref => {\n        let {\n          subscribe,\n          status,\n          message\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Newsletter, {\n          status: status,\n          message: message,\n          onValidated: formData => subscribe(formData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = MailchimpForm;\nvar _c;\n$RefreshReg$(_c, \"MailchimpForm\");","map":{"version":3,"names":["MailchimpSubscribe","Newsletter","MailchimpForm","postUrl","process","env","REACT_APP_MAILCHIMP_URL","REACT_APP_MAILCHIMP_U","REACT_APP_MAILCHIMP_ID","subscribe","status","message","formData"],"sources":["/Users/rafaelabootcamp/dev/react-portfolio/my-portfolio/src/components/MailchimpForm.js"],"sourcesContent":["import MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { Newsletter } from \"./Newsletter\";\n\nexport const MailchimpForm = () => {\n    const postUrl = `${process.env.REACT_APP_MAILCHIMP_URL}?u=${process.env.REACT_APP_MAILCHIMP_U}$id=${process.env.REACT_APP_MAILCHIMP_ID}`;\n\n    return (\n        <>\n        <MailchimpSubscribe\n            url={postUrl}\n            render={({subscribe, status, message}) => (\n                <Newsletter status={status} message={message} onValidated={formData => subscribe(formData)}/>\n            )}\n            />\n        </>\n    )\n}"],"mappings":";AAAA,OAAOA,kBAAkB,MAAM,2BAA2B;AAC1D,SAASC,UAAU,QAAQ,cAAc;AAAC;AAAA;AAE1C,OAAO,MAAMC,aAAa,GAAG,MAAM;EAC/B,MAAMC,OAAO,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,uBAAwB,MAAKF,OAAO,CAACC,GAAG,CAACE,qBAAsB,OAAMH,OAAO,CAACC,GAAG,CAACG,sBAAuB,EAAC;EAExI,oBACI;IAAA,uBACA,QAAC,kBAAkB;MACf,GAAG,EAAEL,OAAQ;MACb,MAAM,EAAE;QAAA,IAAC;UAACM,SAAS;UAAEC,MAAM;UAAEC;QAAO,CAAC;QAAA,oBACjC,QAAC,UAAU;UAAC,MAAM,EAAED,MAAO;UAAC,OAAO,EAAEC,OAAQ;UAAC,WAAW,EAAEC,QAAQ,IAAIH,SAAS,CAACG,QAAQ;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;IAC/F;MAAA;MAAA;MAAA;IAAA;EACA,iBACH;AAEX,CAAC;AAAA,KAbYV,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}